---
import { Image } from 'astro:assets';
import ContextAlert from '../components/ContextAlert.astro';
import Layout from '../layouts/Layout.astro';
import Markdown from '../components/Markdown.astro';
import corgi from '../assets/corgi.jpg';
import { getNetlifyContext } from '../utils';

const sampleImage = '/images/corgi.jpg';

const ctx = getNetlifyContext();
const forceWebP = ctx === 'dev';
const sampleImageSrcSet = [640, 1280, 2048]
    .map((size) => {
        return `/.netlify/images?url=${sampleImage}&w=${size}${forceWebP ? '&fm=webp' : ''} ${size}w`;
    })
    .join(', ');
const sizes = '(max-width: 1024px) 100vw, 1024px';

const astroImageSnippet = `
## Using the built-in Astro &lt;Image /&gt; component

Astro's \`Image\` component will automatically use Netlify Image CDN to serve optimized images.

~~~jsx
---
import { Image } from 'astro:assets';
import corgi from '../assets/corgi.jpg';
---
// Later in your markup...
<Image src={corgi} alt="Corgi" /* ... additional props */ />
~~~
`;

const originalVsCdnSnippet = `
## Original vs. optimized image: can you tell the difference?

In the code below, a regular \`<img>\` tag is used in both cases for a framework-agnostic example. 
Note that aside from Astro's \`Image\` or rolling your own \`<img>\` tags, you can also use the excellent [unpic-img](https://unpic.pics/) package.

~~~jsx
// <== On the left, the original image
<img src="/images/corgi.jpg" alt="Corgi" />

// ==> On the right, explicitly using Netlify Image CDN endpoint for a responsive image
<img 
  srcSet="${sampleImageSrcSet}"
  sizes="${sizes}" 
  alt="Corgi" 
/>
~~~
`;

const devModeWarning = `
In local development, optimization is performed locally without automatic format
detection, so format is set to WebP.
`;
---

<Layout title="Image CDN">
    <div class="flex flex-col gap-12 sm:gap-16">
        <section class="space-y-8">
            <ContextAlert
                addedChecksFunction={(ctx) => {
                    return ctx === 'dev' ? devModeWarning : null;
                }}
            />
           <h1>Parcours</h1>
</section>
<section>
    <!-- Description du parcours académique -->
    <Markdown content="Je suis actuellement étudiant en Master en Ingénierie des Systèmes Complexes à l'Ecole d’Ingénieur du Littoral Côte d’Opale. Ce programme pluridisciplinaire me permet de développer des compétences avancées en modélisation, optimisation et gestion des systèmes complexes, avec un fort accent sur la Data Science, l'analyse des données et le traitement d'images." class="mb-8" />
    
    <!-- Image illustrant ton parcours (par exemple ton université ou un projet) -->
    <figure>
        <Image src="ton-image-universitaire.jpg" alt="Image de l'université ou projet" class="border-2 border-white rounded-lg" />
        <figcaption class="mt-2 text-sm italic">
            Crédit : photo par [nom du photographe ou source] sur 
            <a href="https://unsplash.com">Unsplash</a> ou une autre source
        </figcaption>
    </figure>
</section>
<section>
    <!-- Description d'un projet spécifique dans ton parcours -->

</Layout>

<script>
    const images = document.querySelectorAll<HTMLImageElement>('.diff img');

    images.forEach((image) => {
        if (image.complete) {
            showImageSize(image);
        } else {
            image.addEventListener('load', () => {
                showImageSize(image);
            });
        }
    });

    function showImageSize(image: HTMLImageElement) {
        const imageEntry = window?.performance?.getEntriesByName(image.currentSrc)?.[0] as PerformanceResourceTiming;
        if (imageEntry && imageEntry.encodedBodySize) {
            const imageOverlay = image.previousElementSibling;
            imageOverlay.classList.remove('hidden');
            imageOverlay.textContent = `Size: ${Math.ceil(imageEntry.encodedBodySize / 1024)}KB`;
        }
    }
</script>
